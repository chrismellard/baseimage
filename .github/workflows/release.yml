name: "Release"
on:
  schedule:
    - cron:  '0 0 * * *'

env:
  BUILD_REGISTRY: ghcr.io
  IMAGE_NAME: chrismellard/baseimage
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Base image
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.setpublish.outputs.publish }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Container Diff
        run: |
          curl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64
          mkdir -p "$HOME/bin" && export PATH="$PATH:$HOME/bin"
          install container-diff-linux-amd64 $HOME/bin/container-diff
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.BUILD_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build proposed Docker image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          push: true
      - name: Compare images for diff
        run: |
          docker pull ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker pull ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest || (echo "PUBLISH=true" >> "$GITHUB_ENV" && exit 0)
          echo "PUBLISH=$($HOME/bin/container-diff diff daemon://${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} daemon://${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest -j | jq '.[].Diff | length')" >> "$GITHUB_ENV"
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        if: env.PUBLISH != 0
        with:
          push: true
          tags: ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}, ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - id: setpublish
        name: Set Publish
        if: env.PUBLISH != 0
        run: echo "::set-output name=publish::$PUBLISH"

  open-downstream-pr:
    if: ${{ needs.build.outputs.publish != 0 }}
    name: Open Downstream PR
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GIT_USER: bot-user
      GIT_EMAIL: bot-user@gmail.com
    steps:
      - uses: actions/checkout@v2
        with:
          repository: chrismellard/appimage
          token: ${{ secrets.ADMIN_TOKEN }}
      - name: Set Git Identity
        run: git config --global user.name ${{ env.GIT_USER }} && git config --global user.email ${{ env.GIT_EMAIL }}
      - name: Create PR branch
        run: git checkout -b base-image-${{ env.IMAGE_TAG }}
      - name: Bump Base image
        run: find . -name Dockerfile -exec sed -i "s/\(FROM ghcr.io\/chrismellard\/baseimage:\)[0-9a-z]*/\1${{ env.IMAGE_TAG }}/g" {} \;
      - name: Stage changes
        run: git add .
      - name: Commit changes
        run: git commit -m "Bump Base Image to ${{ env.IMAGE_TAG }}"
      - name: Push changes
        run: git push -u origin base-image-${{ env.IMAGE_TAG }}
      - name: Open PR
        run: gh pr create --title "Bump base image ${{ env.IMAGE_TAG }}" --body "Base Image to ${{ env.IMAGE_TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
#      - name: Merge PR
#        run: gh pr merge base-image-${{ env.IMAGE_NAME }} --admin --rebase
#        env:
#          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
