name: "Release"
on:
  push:
    branches:
      - main
#  schedule:
#    - cron:  '0/2 * * * *'

env:
  BUILD_REGISTRY: ghcr.io
  IMAGE_NAME: chrismellard/baseimage
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Base image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.BUILD_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build proposed Docker image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          push: true
      - name: Compare images for diff
        run: |
          docker pull ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker pull ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest|| echo "PUBLISH=true" >> "$GITHUB_ENV" && exit 0
          EXISTING_IMAGE=$(docker inspect --format='{{.RootFS}}' ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          NEW_IMAGE=$(docker inspect --format='{{.RootFS}}' ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }})
          if [ "$NEW_IMAGE" != "$EXISTING_IMAGE" ]; then echo "PUBLISH=true" >> "$GITHUB_ENV"; fi
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        if: env.PUBLISH == 'true'
        with:
          push: true
          tags: |
            ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.BUILD_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

